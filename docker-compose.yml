version: "3.5"

services:
    ### Database for Context Broker ###
    mongo-db:
        image: mongo:3.6
        hostname: mongo-db
        container_name: mongo
        expose:
            - "27017"
        ports:
            - 27017:27017
        networks:
            - network          
        command: --bind_ip_all --smallfiles
        volumes:
            - /opt/rampiot/mongo:/data/db

    ### Context Broker ###
    orion:
        image: fiware/orion
        hostname: orion
        container_name: fiware-orion
        depends_on:
            - mongo-db
        environment:
            - ORION_HTTPS=true
            - ORION_HTTPS_KEYFILE=/etc/cert/server.key
            - ORION_HTTPS_CERTFILE=/etc/cert/server.crt
        volumes:
            - /etc/cert/server.crt:/etc/cert/server.crt
            - /etc/cert/server.key:/etc/cert/server.key
        networks:
            - network
        ports:
            - 1026:1026
        entrypoint: ["sh", "-c", "rm /tmp/contextBroker.pid; /usr/bin/contextBroker -fg -multiservice -dbhost mongo-db -corsOrigin __ALL -inReqPayloadMaxSize 2097152 -logLevel INFO"]
        restart: always

    iot-agent:
        image: fiware/iotagent-ul:latest
        hostname: iot-agent
        container_name: fiware-iot-agent
        depends_on:
            - mongo-db
        networks:
            - network
        expose:
            - "4041"
            - "7896"
        ports:
            - "4041:4041"
            - "7896:7896"
        environment:
            - IOTA_CB_HOST=orion
            - IOTA_CB_PORT=1026
            - IOTA_NORTH_PORT=4041
            - IOTA_REGISTRY_TYPE=mongodb
            - IOTA_TIMESTAMP=true
            - IOTA_CB_NGSI_VERSION=v2
            - IOTA_AUTOCAST=true
            - IOTA_MONGO_HOST=mongo-db
            - IOTA_MONGO_PORT=27017
            - IOTA_MONGO_DB=iotagentul
            - IOTA_HTTP_PORT=7896
            - IOTA_MQTT_PORT=1883
            - IOTA_MQTT_HOST=127.0.0.1

            - IOTA_PROVIDER_URL=http://iot-agent:4041

    crate-db:
        image: crate:4.1.4
        hostname: crate-db
        command: crate -Cauth.host_based.enabled=false -Ccluster.name=rampcluster -Chttp.cors.enabled=false -Chttp.cors.allow-origin="*" -Cssl.http.enabled=true -Cssl.keystore_filepath=/etc/cert/keystore.jks -Cssl.keystore_key_password=rampiot -Cssl.keystore_password=rampiot
        environment:
            - CRATE_HEAP_SIZE=2g
        ports:
            # Admin UI
            - "4200:4200"
            # Transport protocol
            - "4300:4300"
            - "5432:5432"
        volumes:
            - /opt/rampiot/cratedata:/data
            - /etc/cert/:/etc/cert/
        networks: 
            - network
        restart: always

    quantumleap:
        hostname: quantumleap
        image: orchestracities/quantumleap:latest
        depends_on:
            - crate-db
        container_name: fiware-quantumleap
        ports:
            - "8668:8668"
        environment:
            - CRATE_HOST=crate-db
            - CRATE_PORT=4200
        networks:
            - network

    ### Grafana dashboard ###
    grafana:
        image: grafana/grafana
        depends_on:
            - crate-db
        container_name: grafana
        hostname: grafana
        environment:
            GF_SERVER_PROTOCOL: https
            GF_SERVER_CERT_FILE: /etc/cert/server.crt
            GF_SERVER_CERT_KEY: /etc/cert/server.key
        ports:
            - 3000:3000
        networks:
            - network
        volumes:
            - grafana-storage:/var/lib/grafana
            - ./provisioning:/etc/grafana/provisioning/
            - /etc/cert/server.crt:/etc/cert/server.crt
            - /etc/cert/server.key:/etc/cert/server.key
        restart: always

volumes:
    mongo-db:
    cratedata:
    grafana-storage:
    idm_mysql: ~
    keyrock-users: ~

networks:
    network:
        ipam:
            config:
                - subnet: 172.18.1.0/24

